{"version":3,"sources":["Components/Persons.js","Components/InputForm.js","Components/Communication.js","Components/App.js","index.js"],"names":["Persons","personList","buttonHandlerFactory","rows","map","person","key","id","name","number","onSubmit","type","RemoveButton","InputForm","newName","onNameChange","newNumber","onNumberChange","addPerson","value","onChange","axios","get","then","response","data","newPerson","post","delete","App","props","handleNewName","event","setState","target","handleNewNumber","preventDefault","preventDuplicate","state","Server","returnedPerson","persons","concat","catch","error","alert","duplicate","includes","removePerson","window","confirm","filter","filterPerson","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kSA2BeA,EAxBC,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,qBAUtBC,EAAOF,EAAWG,KAAI,SAAAC,GAAM,OAChC,wBAAIC,IAAKD,EAAOE,IAAI,4BAAKF,EAAOG,MAAU,4BAAKH,EAAOI,QAAY,4BAT/C,SAACJ,GACpB,OACE,0BAAMK,SAAUR,EAAqBG,IACnC,4BAAQM,KAAK,UAAb,WAMmEC,CAAaP,QAGtF,OACE,+BACE,+BACGF,KCKMU,EAtBG,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,QAAQC,EAAqD,EAArDA,aAAaC,EAAwC,EAAxCA,UAAUC,EAA8B,EAA9BA,eAAeC,EAAe,EAAfA,UAChE,OACE,0BAAMR,SAAUQ,GACd,sCACQ,2BACNC,MAAOL,EACPM,SAAUL,KAGZ,wCACY,2BACRI,MAAOH,EACPI,SAAUH,KAGd,6BACE,4BAAQN,KAAK,UAAb,U,gBCAO,EAdA,WAEX,OADgBU,IAAMC,IAHV,gBAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY9B,EATA,SAACC,GAEZ,OADgBL,IAAMM,KARV,eAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO9B,EAJA,SAACpB,GACZ,OAAOgB,IAAMO,OAAN,UAbK,eAaL,YAA2BvB,EAAOE,MCoF9BsB,E,YA9Fb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAkBRC,cAAgB,SAACC,GAAD,OAAW,EAAKC,SAAS,CAACnB,QAASkB,EAAME,OAAOf,SAnB7C,EAoBnBgB,gBAAkB,SAACH,GAAD,OAAW,EAAKC,SAAS,CAACjB,UAAWgB,EAAME,OAAOf,SApBjD,EAuBnBD,UAAY,SAACc,GAEX,GADAA,EAAMI,kBACF,EAAKC,mBAAT,CAEA,IAAMX,EAAY,CAChBlB,KAAM,EAAK8B,MAAMxB,QACjBL,OAAQ,EAAK6B,MAAMtB,WAGrBuB,EACUb,GACPH,MAAK,SAAAiB,GACJ,EAAKP,SAAS,CACZQ,QAAS,EAAKH,MAAMG,QAAQC,OAAOF,GACnC1B,QAAS,GACTE,UAAW,QAGd2B,OAAM,SAAAC,GACLC,MAAMD,EAAMpB,SAASC,KAAKmB,YA1Cb,EA+CnBP,iBAAmB,WAEjB,IAAMS,EAAY,EAAKR,MAAMG,QAAQrC,KAAI,SAAAC,GAAM,OAAIA,EAAOG,QAAMuC,SAAS,EAAKT,MAAMxB,SAIpF,OAHIgC,GACFD,MAAM,SAAD,OAAU,EAAKP,MAAMxB,QAArB,sBAEAgC,GArDU,EAyDnBE,aAAe,SAAC3C,GAAD,OAAY,SAAC2B,GAC1BA,EAAMI,iBAEDa,OAAOC,QAAP,uCAA+C7C,EAAOG,KAAtD,OAGL+B,EACUlC,GACPkB,MAAK,WACJ,EAAKU,SAAS,CACZQ,QAAS,EAAKH,MAAMG,QAAQU,QAAO,SAAAC,GAAY,OAAI/C,EAAOE,KAAO6C,EAAa7C,aAjEpF,EAAK+B,MAAQ,CACXG,QAAS,GACT3B,QAAS,GACTE,UAAW,IALI,E,iFAUC,IAAD,OACjBuB,IAEGhB,MAAK,SAAAC,GACJ,EAAKS,SAAS,CAACQ,QAASjB,S,+BA2D5B,OACE,6BACE,yCACA,kBAAC,EAAD,CACEV,QAASuC,KAAKf,MAAMxB,QACpBC,aAAcsC,KAAKtB,cACnBf,UAAWqC,KAAKf,MAAMtB,UACtBC,eAAgBoC,KAAKlB,gBACrBjB,UAAWmC,KAAKnC,YAElB,uCACA,kBAAC,EAAD,CACEjB,WAAYoD,KAAKf,MAAMG,QACvBvC,qBAAsBmD,KAAKL,oB,GAvFnBM,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1bd53fb2.chunk.js","sourcesContent":["import React from 'react';\n\n//A small component that arranges the list of persons to jsx.\nconst Persons = ({personList, buttonHandlerFactory}) => {\n\n  const RemoveButton = (person) => {\n    return (\n      <form onSubmit={buttonHandlerFactory(person)}>\n        <button type=\"submit\">remove</button>\n      </form>\n    )\n  }\n\n  const rows = personList.map(person => \n    <tr key={person.id}><td>{person.name}</td><td>{person.number}</td><td>{RemoveButton(person)}</td></tr>\n  )\n\n  return (\n    <table>\n      <tbody>\n        {rows}\n      </tbody>\n    </table> \n  )\n}\n\n\nexport default Persons","import React from 'react';\n\n//Component providing the input form\nconst InputForm = ({newName,onNameChange,newNumber,onNumberChange,addPerson}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input \n        value={newName}\n        onChange={onNameChange}\n        />\n      </div>\n      <div>\n          number: <input \n          value={newNumber}\n          onChange={onNumberChange}\n          />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default InputForm","//This file handles communication with the json server.\n\nimport axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (newPerson) => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst remove = (person) => {\n    return axios.delete(`${baseUrl}/${person.id}`)\n}\n\nexport default {getAll, create, remove}","import React from 'react';\nimport Persons from './Persons'\nimport InputForm from './InputForm'\nimport Server from './Communication'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      persons: [],\n      newName: '',\n      newNumber: ''\n    }\n  }\n\n  //Loads the list of persons from the server\n  componentDidMount(){\n    Server\n      .getAll()\n      .then(response => {\n        this.setState({persons: response})\n      })\n  }\n\n  //Form event handlers keeping the newName and newNumber states up to date.\n  handleNewName = (event) => this.setState({newName: event.target.value})\n  handleNewNumber = (event) => this.setState({newNumber: event.target.value})\n\n  //Form event handle adding a new person to the list.\n  addPerson = (event) => {\n    event.preventDefault()\n    if (this.preventDuplicate()) return;\n\n    const newPerson = {\n      name: this.state.newName,\n      number: this.state.newNumber\n    }\n\n    Server\n      .create(newPerson)\n      .then(returnedPerson => {\n        this.setState({\n          persons: this.state.persons.concat(returnedPerson),\n          newName: '',\n          newNumber: ''\n        })\n      })\n      .catch(error => {\n        alert(error.response.data.error)\n      })\n  }\n\n  //Checks if the added name is a duplicate (two persons can still have same numbers)\n  preventDuplicate = () => {\n    //boolean\n    const duplicate = this.state.persons.map(person => person.name).includes(this.state.newName)\n    if (duplicate) {\n      alert(`Name '${this.state.newName}' already exists!`)\n    }\n    return duplicate\n  }\n\n  //Button event handler factory for the romeve buttons\n  removePerson = (person) => (event) => {\n    event.preventDefault()\n    //Ask the user for confirmation.\n    if (!window.confirm(`Do you really want to remove ${person.name}?`)){\n      return\n    }\n    Server\n      .remove(person)\n      .then(() => {\n        this.setState({\n          persons: this.state.persons.filter(filterPerson => person.id !== filterPerson.id)\n        })\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Directory</h2>\n        <InputForm\n          newName={this.state.newName}\n          onNameChange={this.handleNewName}\n          newNumber={this.state.newNumber}\n          onNumberChange={this.handleNewNumber}\n          addPerson={this.addPerson}\n        />\n        <h2>Numbers</h2>\n        <Persons \n          personList={this.state.persons}\n          buttonHandlerFactory={this.removePerson}\n        />\n      </div>\n    )\n  }\n}\n\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}